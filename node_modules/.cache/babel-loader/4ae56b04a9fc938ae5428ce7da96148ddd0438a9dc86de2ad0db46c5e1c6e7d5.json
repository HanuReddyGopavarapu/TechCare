{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Divya\\\\Desktop\\\\Uidesgin\\\\my-app\\\\src\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { Chart, registerables } from \"chart.js\";\nimport carddet from \"./carddata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst Dashboard = () => {\n  _s();\n  const [patientData, setPatientData] = useState(null);\n  useEffect(() => {\n    axios.get(\"https://api.example.com/jessica-taylor\").then(response => {\n      setPatientData(response.data);\n    }).catch(error => {\n      console.error(\"There was an error fetching the patient data!\", error);\n    });\n  }, []);\n  const data = {\n    labels: [\"Oct 2023\", \"Nov 2023\", \"Dec 2023\", \"Jan 2024\", \"Feb 2024\", \"Mar 2024\"],\n    datasets: [{\n      label: \"Systolic\",\n      data: [120, 125, 130, 135, 140, 145],\n      borderColor: \"#FF6384\",\n      fill: false\n    }, {\n      label: \"Diastolic\",\n      data: [80, 82, 84, 86, 88, 90],\n      borderColor: \"#36A2EB\",\n      fill: false\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return tooltipItem.dataset.label + \": \" + tooltipItem.raw;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-[10px] ml-[400px] left-[18px] w-[766px] h-[670px] opacity-100 \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Diagnosis History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"44ptqQWX5gEf4iLrnsfLCSNHu+Y=\");\n_c = Dashboard;\n{/* {patientData && (\r\n  <div className=\"mt-8\">\r\n    <h3 className=\"text-xl font-bold mb-4\">Patient Details</h3>\r\n    <p>Name: {patientData.name}</p>\r\n    <p>Date of Birth: {patientData.date_of_birth}</p>\r\n    <p>Gender: {patientData.gender}</p>\r\n  </div>\r\n )} */}\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Line","axios","Chart","registerables","carddet","jsxDEV","_jsxDEV","register","Dashboard","_s","patientData","setPatientData","get","then","response","data","catch","error","console","labels","datasets","label","borderColor","fill","options","responsive","plugins","legend","position","tooltip","callbacks","tooltipItem","dataset","raw","scales","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Divya/Desktop/Uidesgin/my-app/src/Dashboard.jsx"],"sourcesContent":["// src/components/Dashboard.jsx\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport { Chart, registerables } from \"chart.js\";\r\nimport carddet from \"./carddata\";\r\n\r\nChart.register(...registerables);\r\n\r\nconst Dashboard = () => {\r\n  const [patientData, setPatientData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://api.example.com/jessica-taylor\")\r\n      .then((response) => {\r\n        setPatientData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error fetching the patient data!\", error);\r\n      });\r\n  }, []);\r\n\r\n  const data = {\r\n    labels: [\r\n      \"Oct 2023\",\r\n      \"Nov 2023\",\r\n      \"Dec 2023\",\r\n      \"Jan 2024\",\r\n      \"Feb 2024\",\r\n      \"Mar 2024\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"Systolic\",\r\n        data: [120, 125, 130, 135, 140, 145],\r\n        borderColor: \"#FF6384\",\r\n        fill: false,\r\n      },\r\n      {\r\n        label: \"Diastolic\",\r\n        data: [80, 82, 84, 86, 88, 90],\r\n        borderColor: \"#36A2EB\",\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (tooltipItem) {\r\n            return tooltipItem.dataset.label + \": \" + tooltipItem.raw;\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n   \r\n    <div className=\"mt-[10px] ml-[400px] left-[18px] w-[766px] h-[670px] opacity-100 \">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Diagnosis History</h2>\r\n        <Line data={data} options={options} />\r\n      </div>\r\n      </div>)};\r\n      {/* {patientData && (\r\n        <div className=\"mt-8\">\r\n          <h3 className=\"text-xl font-bold mb-4\">Patient Details</h3>\r\n          <p>Name: {patientData.name}</p>\r\n          <p>Date of Birth: {patientData.date_of_birth}</p>\r\n          <p>Gender: {patientData.gender}</p>\r\n        </div>\r\n      )} */}\r\n       \r\n       \r\n\r\n     \r\n  \r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}